# -*- coding: utf-8 -*-
"""Face-Detection-Using-MTCNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QOjHobcPG2URg8Ue_I-GT_7iD_UOcGzo
"""

!pip install mtcnn

!apt install subversion

!svn checkout https://github.com/Shricastic7/Face-Detection-Using-MTCNN/trunk/images

import mtcnn
print(mtcnn.__version__)

# Commented out IPython magic to ensure Python compatibility.
from mtcnn.mtcnn import MTCNN
import matplotlib.pyplot as plt
# %matplotlib inline

pixels1 = plt.imread('./images/image1.jpg')
pixels2 = plt.imread('./images/image2.jpg')
pixels3 = plt.imread('./images/image3.jpg')
pixels4 = plt.imread('./images/image4.jpg')
pixels5 = plt.imread('./images/image5.jpg')

detector = MTCNN()

results1 = detector.detect_faces(pixels1)
results2 = detector.detect_faces(pixels2)
results3 = detector.detect_faces(pixels3)
results4 = detector.detect_faces(pixels4)
results5 = detector.detect_faces(pixels5)

results1
results2
results3
results4
results5

# draw an image with detected objects
def draw_facebox(filename, result_list):
    # load the image
    data = plt.imread(filename)
    # plot the image
    plt.imshow(data)
    # get the context for drawing boxes
    ax = plt.gca()
    # plot each box
    for result in result_list:
        # get coordinates
        x, y, width, height = result['box']
        # create the shape
        rect = plt.Rectangle((x, y), width, height, fill=False, color='green')
        # draw the box
        ax.add_patch(rect)

        # show the plot
    plt.show()

draw_facebox('./images/image1.jpg', results1)
draw_facebox('./images/image2.jpg', results2)
draw_facebox('./images/image3.jpg', results3)
draw_facebox('./images/image4.jpg', results4)
draw_facebox('./images/image5.jpg', results5)

# draw an image with detected objects
def draw_facebox_and_keypoints(filename, result_list):
    # load the image
    data = plt.imread(filename)
    # plot the image
    plt.imshow(data)
    # get the context for drawing boxes
    ax = plt.gca()
    # plot each box
    for result in result_list:
        # get coordinates
        x, y, width, height = result['box']
        # create the shape
        rect = plt.Rectangle((x, y), width, height,fill=False, color='orange')
        # draw the box
        ax.add_patch(rect)
        # draw the dots
        for key, value in result['keypoints'].items():
            # create and draw dot
            dot = plt.Circle(value, radius=1, color='red')
            ax.add_patch(dot)
            # show the plot
    plt.show()# filename = 'test1.jpg' # filename is defined above, otherwise uncomment

draw_facebox_and_keypoints('./images/image1.jpg', results1)
draw_facebox_and_keypoints('./images/image2.jpg', results2)
draw_facebox_and_keypoints('./images/image3.jpg', results3)
draw_facebox_and_keypoints('./images/image4.jpg', results4)
draw_facebox_and_keypoints('./images/image5.jpg', results5)

print(" faces detected in image1 = ",len(results1),"\n",
      "faces detected in image2 = ",len(results2),"\n",
      "faces detected in image3 = ",len(results3),"\n",
      "faces detected in image4 = ",len(results4),"\n",
      "faces detected in image5 = ",len(results5),"\n",)